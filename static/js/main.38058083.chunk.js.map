{"version":3,"sources":["Components/Country/Country.js","Components/CountryList/CountryList.js","Components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Country","props","className","src","stats","CountryCode","alt","Active","Confirmed","Recovered","Deaths","CountryList","map","country","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","countries","a","fetch","resp","json","this","forEach","Slug","data","length","prevState","concat","ISO2","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVAkBeA,EAfC,SAACC,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKC,IAAG,sCAAiCF,EAAMG,MAAMC,YAA7C,gBAAwEC,IAAKL,EAAMG,MAAMJ,UACjG,6BAAKC,EAAMG,MAAMJ,UACjB,sBAAKE,UAAU,WAAf,UACI,+CAAgBD,EAAMG,MAAMG,OAA5B,OACA,kDAAmBN,EAAMG,MAAMI,UAA/B,OACA,kDAAmBP,EAAMG,MAAMK,UAA/B,OACA,+CAAgBR,EAAMG,MAAMM,OAA5B,cCEDC,G,MAVK,SAACV,GACjB,OACI,qBAAKC,UAAU,cAAf,SAEID,EAAMG,MAAMQ,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAmCT,MAAOS,GAA5BA,EAAQR,oBCK9CS,G,MAVG,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC7B,OACI,uBAAOC,KAAK,SACZf,UAAU,SACVa,YAAaA,EACbG,SAAUF,MCgDHG,E,kDAjDb,aAAc,IAAD,8BACX,gBAyBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAzBpC,EAAKC,MAAQ,CACXC,UAAW,GACXtB,MAAO,GACPkB,YAAa,IALJ,E,4FASb,qCAAAK,EAAA,sEACqBC,MAAM,wCAD3B,cACQC,EADR,gBAE0BA,EAAKC,OAF/B,OAEQJ,EAFR,OAGEK,KAAKV,SAAS,CAACK,cAEfK,KAAKN,MAAMC,UAAUM,QAArB,uCAA6B,WAAMnB,GAAN,iBAAAc,EAAA,sEACRC,MAAM,4CAAD,OAA6Cf,EAAQoB,OADlD,cACrBJ,EADqB,gBAERA,EAAKC,OAFG,QAErBI,EAFqB,QAInBC,QACR,EAAKd,UAAS,SAAAe,GAAS,MACrB,CAAChC,MAAMgC,EAAUhC,MAAMiC,OAAhB,2BAA2BH,EAAKA,EAAKC,OAAS,IAA9C,IAAmD9B,YAAYQ,EAAQyB,YANrD,2CAA7B,kCAAAP,KAAA,gBALF,gD,0EAqBA,WAEE,MAA6BA,KAAKN,MAA3BrB,EAAP,EAAOA,MAAOkB,EAAd,EAAcA,YAERiB,EAAoBnC,EAAMoC,QAAO,SAAA3B,GAAO,OAC5CA,EAAQb,QAAQyC,cAAcC,SAASpB,EAAYmB,kBAGrD,OACE,sBAAKvC,UAAU,MAAf,UACE,wCACA,cAAC,EAAD,CAAWa,YAAY,qBAAqBC,aAAce,KAAKf,eAC/D,cAAC,EAAD,CAAaZ,MAAOmC,W,GA5CVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38058083.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Country.css';\r\n\r\nconst Country = (props) => {\r\n    return(\r\n        <div className='country'>\r\n            <img src={`https://www.countryflags.io/${props.stats.CountryCode}/flat/64.png`} alt={props.stats.Country}></img>\r\n            <h2>{props.stats.Country}</h2>\r\n            <div className='describe'>\r\n                <p>{`Active : ${props.stats.Active} `}</p>\r\n                <p>{`Confirmed : ${props.stats.Confirmed} `}</p>\r\n                <p>{`Recovered : ${props.stats.Recovered} `}</p>\r\n                <p>{`Deaths : ${props.stats.Deaths} `}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport Country from '../Country/Country';\r\nimport './CountryList.css';\r\n\r\nconst CountryList = (props) => {\r\n    return(\r\n        <div className='countrylist'>\r\n        {\r\n            props.stats.map(country => <Country key={country.CountryCode} stats={country} /> )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryList;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => {\r\n    return(\r\n        <input type='search' \r\n        className='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\nimport './App.css';\nimport CountryList from './Components/CountryList/CountryList';\nimport SearchBox from './Components/SearchBox/SearchBox';\n\nclass App extends React.Component{\n\n  constructor(){\n    super();\n    this.state = {\n      countries: [],\n      stats: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount(){\n    const resp = await fetch('https://api.covid19api.com/countries');\n    const countries = await resp.json();\n    this.setState({countries});\n\n    this.state.countries.forEach(async country => {\n      const resp = await fetch(`https://api.covid19api.com/total/country/${country.Slug}`);\n      const data = await resp.json();\n\n      if(data.length)\n      this.setState(prevState => (\n        {stats:prevState.stats.concat({...data[data.length - 1 ], CountryCode:country.ISO2})}\n      ))\n    });\n    \n  }\n\n  handleChange = (e) => {\n    this.setState({searchField:e.target.value})\n  }\n\n  render(){\n\n    const {stats, searchField} = this.state\n\n    const filteredCountries = stats.filter(country => (\n      country.Country.toLowerCase().includes(searchField.toLowerCase())\n    ))\n\n    return (\n      <div className=\"App\">\n        <h1>My App</h1>\n        <SearchBox placeholder='Enter country name' handleChange={this.handleChange} />\n        <CountryList stats={filteredCountries} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}